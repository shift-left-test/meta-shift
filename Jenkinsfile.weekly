pipeline {
    agent none
    options {
	parallelsAlwaysFailFast()
    }
    stages {
	// "gatesgarth-next", "dunfell-next", "zeus-next", "warrior-next", "thud-next", "sumo-next", "rocko-next", "pyro-next", "morty-next", "krogoth-next", "jethro-next"
        stage("gatesgarth-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:18.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "gatesgarth-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("dunfell-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "dunfell-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("zeus-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "zeus-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("warrior-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "warrior-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("thud-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "thud-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("sumo-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "sumo-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("rocko-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "rocko-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("pyro-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "pyro-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("morty-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "morty-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("krogoth-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "krogoth-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
        stage("jethro-next") {
            matrix {
                agent {
                    docker {
                        image "cart.lge.com/swte/yocto:16.04"
                    }
                }
                axes {
                    axis {
                        name "MACHINE"
                        values "qemuarm64", "qemuarm", "qemux86-64", "qemux86", "raspberrypi2"
                    }
                }
                stages {
		    stage("Setup") {
			steps {
			    cleanWs disableDeferredWipeout: true
                            git branch: "jethro-next", url: "http://mod.lge.com/hub/yocto/meta-shift.git"
			}
		    }
                    stage("Test") {
                        environment {
                            MACHINE = "${MACHINE}"
			    DL_DIR = "${env.WORKSPACE}/build-res/downloads"
			    SSTATE_DIR = "${env.WORKSPACE}/build-res/sstate-cache"
			    BB_GENERATE_MIRROR_TARBALLS = "1"
                        }
                        steps {
                            sh "python3 -m pytest -xvv --basetemp=${env.WORKSPACE}/temp"
                        }
                    }
		    stage("Cleanup") {
			steps {
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/git2"
			    sh "rm -rf ${env.WORKSPACE}/build-res/downloads/svn"
			    sh "find ${env.WORKSPACE}/build-res/downloads -type f -name '*.done' -delete"
			}
		    }
                    stage("Upload") {
                        environment {
                            AUTH = credentials("df64c294-9273-4b28-9625-a276771388c5")
                        }
                        steps {
                            dir("${env.WORKSPACE}/build-res") {
                                sh 'find . -type f -exec curl -u$AUTH_USR:$AUTH_PSW -T {} http://cart.lge.com/yocto-mirrors/{} \\;'
                            }
                        }
                    }
                }
            }  // matrix
        }  // stage
    }  // stages
}  // pipeline
