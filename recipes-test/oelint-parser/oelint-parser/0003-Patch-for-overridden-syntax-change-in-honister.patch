diff --git a/oelint_parser/cls_item.py b/oelint_parser/cls_item.py
index ee3280c..49b69ef 100644
--- a/oelint_parser/cls_item.py
+++ b/oelint_parser/cls_item.py
@@ -166,7 +166,7 @@ class Item(object):
             tmp = ""
             if "-" in i:
                 # just use the prefix in case a dash is found
-                # that addresses things like FILES_${PN}-dev
+                # that addresses things like FILES:${PN}-dev
                 tmp = "-" + "-".join(i.split("-")[1:])
                 i = i.split("-")[0]
             if re.match("[a-z0-9{}$]+", i) and _var[0] != "pkg":
diff --git a/oelint_parser/data/const-default.json b/oelint_parser/data/const-default.json
index 6a67878..568c528 100644
--- a/oelint_parser/data/const-default.json
+++ b/oelint_parser/data/const-default.json
@@ -694,11 +694,11 @@
             "INITRAMFS_NAME",
             "INITRAMFS_TASK",
             "INITRD_IMAGE",
-            "INITSCRIPT_NAME_${PN}",
+            "INITSCRIPT_NAME:${PN}",
             "INITSCRIPT_NAME",
             "INITSCRIPT_PACKAGES",
             "INITSCRIPT_PARAM",
-            "INITSCRIPT_PARAMS_${PN}",
+            "INITSCRIPT_PARAMS:${PN}",
             "INITSCRIPT_PARAMS",
             "INSANE_SKIP",
             "IPKGCONF_SDK",
@@ -1159,7 +1159,7 @@
             "SYSROOT_DIRS_NATIVE",
             "SYSROOT_DIRS",
             "SYSROOT_PREPROCESS_FUNCS",
-            "SYSTEMD_AUTO_ENABLE_${PN}",
+            "SYSTEMD_AUTO_ENABLE:${PN}",
             "SYSTEMD_AUTO_ENABLE",
             "SYSTEMD_DEFAULT_TARGET",
             "SYSTEMD_PACKAGES",
@@ -1393,12 +1393,12 @@
     },
     "sets": {
         "base": {
-            "FILES_${PN}": "${bindir} ${sbindir} ${libexecdir} ${libdir}/lib*${SOLIBS} ${sysconfdir} ${sharedstatedir} ${localstatedir} ${base_bindir} ${base_sbindir} ${base_libdir}/*${SOLIBS} ${base_prefix}/lib/udev ${prefix}/lib/udev ${base_libdir}/udev ${libdir}/udev ${datadir}/${BPN} ${libdir}/${BPN} ${datadir}/pixmaps ${datadir}/applications ${datadir}/idl ${datadir}/omf ${datadir}/sounds ${libdir}/bonobo/servers",
-            "FILES_${PN}-bin": "${bindir} ${sbindir}/*",
-            "FILES_${PN}-doc": "${docdir} ${mandir} ${infodir} ${datadir}/gtk-doc ${datadir}/gnome/help",
-            "FILES_${PN}-dev": "${includedir} ${base_libdir}/lib*${SOLIBSDEV} ${libdir}/lib*${SOLIBSDEV} ${libdir}/*.la ${libdir}/*.o ${libdir}/pkgconfig ${datadir}/pkgconfig ${datadir}/aclocal ${base_libdir}/*.o ${libdir}/${BPN}/*.la ${base_libdir}/*.la ${libdir}/cmake ${datadir}/cmake",
-            "FILES_${PN}-staticdev": "${libdir}/*.a ${base_libdir}/*.a ${libdir}/${BPN}/*.a",
-            "FILES_${PN}-dbg": "${libdir}/debug ${libdir}/debug-static /usr/src/debug",
+            "FILES:${PN}": "${bindir} ${sbindir} ${libexecdir} ${libdir}/lib*${SOLIBS} ${sysconfdir} ${sharedstatedir} ${localstatedir} ${base_bindir} ${base_sbindir} ${base_libdir}/*${SOLIBS} ${base_prefix}/lib/udev ${prefix}/lib/udev ${base_libdir}/udev ${libdir}/udev ${datadir}/${BPN} ${libdir}/${BPN} ${datadir}/pixmaps ${datadir}/applications ${datadir}/idl ${datadir}/omf ${datadir}/sounds ${libdir}/bonobo/servers",
+            "FILES:${PN}-bin": "${bindir} ${sbindir}/*",
+            "FILES:${PN}-doc": "${docdir} ${mandir} ${infodir} ${datadir}/gtk-doc ${datadir}/gnome/help",
+            "FILES:${PN}-dev": "${includedir} ${base_libdir}/lib*${SOLIBSDEV} ${libdir}/lib*${SOLIBSDEV} ${libdir}/*.la ${libdir}/*.o ${libdir}/pkgconfig ${datadir}/pkgconfig ${datadir}/aclocal ${base_libdir}/*.o ${libdir}/${BPN}/*.la ${base_libdir}/*.la ${libdir}/cmake ${datadir}/cmake",
+            "FILES:${PN}-staticdev": "${libdir}/*.a ${base_libdir}/*.a ${libdir}/${BPN}/*.a",
+            "FILES:${PN}-dbg": "${libdir}/debug ${libdir}/debug-static /usr/src/debug",
             "FILES:${PN}": "${bindir} ${sbindir} ${libexecdir} ${libdir}/lib*${SOLIBS} ${sysconfdir} ${sharedstatedir} ${localstatedir} ${base_bindir} ${base_sbindir} ${base_libdir}/*${SOLIBS} ${base_prefix}/lib/udev ${prefix}/lib/udev ${base_libdir}/udev ${libdir}/udev ${datadir}/${BPN} ${libdir}/${BPN} ${datadir}/pixmaps ${datadir}/applications ${datadir}/idl ${datadir}/omf ${datadir}/sounds ${libdir}/bonobo/servers",
             "FILES:${PN}-bin": "${bindir} ${sbindir}/*",
             "FILES:${PN}-doc": "${docdir} ${mandir} ${infodir} ${datadir}/gtk-doc ${datadir}/gnome/help",
diff --git a/tests/test-image.bb b/tests/test-image.bb
index 64f45db..b3838fe 100644
--- a/tests/test-image.bb
+++ b/tests/test-image.bb
@@ -1,3 +1,3 @@
 inherit core-image
 
-IMAGE_INSTALL_append = " foo"
+IMAGE_INSTALL:append = " foo"
diff --git a/tests/test-pkggroup.bb b/tests/test-pkggroup.bb
index 11b44b8..9db62b2 100644
--- a/tests/test-pkggroup.bb
+++ b/tests/test-pkggroup.bb
@@ -1,3 +1,3 @@
 inherit packagegroup
 
-RDEPENDS_${PN} += "foo"
+RDEPENDS:${PN} += "foo"
diff --git a/tests/test-recipe_1.0.bb b/tests/test-recipe_1.0.bb
index 86a6d26..a676254 100644
--- a/tests/test-recipe_1.0.bb
+++ b/tests/test-recipe_1.0.bb
@@ -9,10 +9,10 @@ PACKAGECONFIG[abc] = "foo,bar,baz"
 
 INLINECODEBLOCK = "${@bb.utils.contains('DISTRO_FEATURES', 'systemd', 'systemd-systemctl-native', '', d)}"
 UPSTREAM_CHECK_REGEX = "(?P<pver>12\.\d+\.\d+)"
-TARGETVAR_class-target = "foo"
-NATIVEVAR_class-native = "foo"
-CROSSVAR_class-cross = "foo"
-SDKVAR_class-nativesdk = "foo"
+TARGETVAR:class-target = "foo"
+NATIVEVAR:class-native = "foo"
+CROSSVAR:class-cross = "foo"
+SDKVAR:class-nativesdk = "foo"
 
 # Just a comment
 # across multiple lines
@@ -21,7 +21,7 @@ do_example() {
     bbwarn "This is an example warning"
 }
 
-fakeroot python do_something_append() {
+fakeroot python do_something:append() {
     bb.warn("This is another example warning")
 }
 
@@ -51,4 +51,4 @@ do_configure[noexec] = "1"
 export lib = "${bindir}/foo"
 export PYTHON_ABI
 
-RDEPENDS_${PN}-test += "foo"
+RDEPENDS:${PN}-test += "foo"
diff --git a/tests/test_parser.py b/tests/test_parser.py
index ed8be85..626cb7d 100644
--- a/tests/test_parser.py
+++ b/tests/test_parser.py
@@ -57,7 +57,7 @@ class OelintParserTest(unittest.TestCase):
             self.assertEqual(x.VarValue, '"foo"')
             self.assertEqual(x.VarValueStripped, 'foo')
             self.assertEqual(x.VarName, 'RDEPENDS')
-            self.assertEqual(x.VarNameComplete, 'RDEPENDS_${PN}-test')
+            self.assertEqual(x.VarNameComplete, 'RDEPENDS:${PN}-test')
             self.assertEqual(x.RawVarName, 'RDEPENDS')
             self.assertEqual(x.get_items(), ["foo"])
             self.assertEqual(x.SubItems, ["${PN}-test"])
